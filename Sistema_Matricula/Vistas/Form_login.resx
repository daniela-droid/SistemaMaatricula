<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        60YB7j8tAAAAAElFTkSuQmCC
</value>
  </data>
</root>